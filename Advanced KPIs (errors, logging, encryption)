import threading
import time
import requests
import logging
from cryptography.fernet import Fernet
from requests.exceptions import RequestException

# Set up logging
logging.basicConfig(filename='app.log', level=logging.INFO)

# Define your KPIs
kpis = {
    'sales': 'https://api.example.com/sales',
    'users': 'https://api.example.com/users',
    'engagement': 'https://api.example.com/engagement',
}

# Generate a key for encryption
key = Fernet.generate_key()
cipher_suite = Fernet(key)

def update_kpi(kpi, url):
    while True:
        try:
            # Fetch the KPI data
            response = requests.get(url)
            data = response.json()

            # Encrypt the data
            encrypted_data = cipher_suite.encrypt(str(data).encode())

            # Update the KPI
            kpis[kpi] = encrypted_data

            # Log the update
            logging.info(f'Updated {kpi} at {time.ctime()}')

        except RequestException as e:
            logging.error(f'Failed to update {kpi}: {e}')

        finally:
            # Wait for a while before updating again
            time.sleep(60)

# Create and start a thread for each KPI
for kpi, url in kpis.items():
    thread = threading.Thread(target=update_kpi, args=(kpi, url))
    thread.start()
